Ext.data.JsonP.Deft_promise_Resolver({"tagname":"class","name":"Deft.promise.Resolver","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"Resolver.js","href":"Resolver.html#Deft-promise-Resolver"}],"private":true,"aliases":{},"alternateClassNames":["Deft.Resolver"],"extends":"Ext.Base","mixins":[],"requires":["Deft.promise.Consequence"],"uses":[],"members":[{"name":"completed","tagname":"property","owner":"Deft.promise.Resolver","id":"property-completed","meta":{"private":true}},{"name":"completionAction","tagname":"property","owner":"Deft.promise.Resolver","id":"property-completionAction","meta":{"private":true}},{"name":"completionValue","tagname":"property","owner":"Deft.promise.Resolver","id":"property-completionValue","meta":{"private":true}},{"name":"consequences","tagname":"property","owner":"Deft.promise.Resolver","id":"property-consequences","meta":{"private":true}},{"name":"promise","tagname":"property","owner":"Deft.promise.Resolver","id":"property-promise","meta":{}},{"name":"constructor","tagname":"method","owner":"Deft.promise.Resolver","id":"method-constructor","meta":{}},{"name":"complete","tagname":"method","owner":"Deft.promise.Resolver","id":"method-complete","meta":{"private":true}},{"name":"reject","tagname":"method","owner":"Deft.promise.Resolver","id":"method-reject","meta":{}},{"name":"resolve","tagname":"method","owner":"Deft.promise.Resolver","id":"method-resolve","meta":{}},{"name":"then","tagname":"method","owner":"Deft.promise.Resolver","id":"method-then","meta":{}},{"name":"update","tagname":"method","owner":"Deft.promise.Resolver","id":"method-update","meta":{}}],"code_type":"ext_define","id":"class-Deft.promise.Resolver","short_doc":"Resolvers are used internally by Deferreds to create, resolve and reject\nPromises, and to propagate fulfillment and r...","component":false,"superclasses":["Ext.Base"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Alternate names</h4><div class='alternate-class-name'>Deft.Resolver</div><h4>Hierarchy</h4><div class='subclass first-child'>Ext.Base<div class='subclass '><strong>Deft.promise.Resolver</strong></div></div><h4>Requires</h4><div class='dependency'><a href='#!/api/Deft.promise.Consequence' rel='Deft.promise.Consequence' class='docClass'>Deft.promise.Consequence</a></div><h4>Files</h4><div class='dependency'><a href='source/Resolver.html#Deft-promise-Resolver' target='_blank'>Resolver.js</a></div></pre><div class='doc-contents'><div class='rounded-box private-box'><p><strong>NOTE:</strong> This is a private utility class for internal use by the framework. Don't rely on its existence.</p></div><p>Resolvers are used internally by Deferreds to create, resolve and reject\nPromises, and to propagate fulfillment and rejection.</p>\n\n<p>Developers never directly interact with a Resolver.</p>\n\n<p>Each Deferred has an associated Resolver, and each Resolver has an\nassociated Promise. A Deferred delegates resolve() and reject() calls to\nits Resolver's resolve() and reject() methods. A Promise delegates\nthen() calls to its Resolver's then() method. In this way, access to\nResolver operations are divided between producer (Deferred) and consumer\n(Promise) roles.</p>\n\n<p>When a Resolver's resolve() method is called, it fulfills with the\noptionally specified value. If resolve() is called with a then-able\n(i.e.a Function or Object with a then() function, such as another\nPromise) it assimilates the then-able's result; the Resolver provides\nits own resolve() and reject() methods as the onFulfilled or onRejected\narguments in a call to that then-able's then() function. If an error is\nthrown while calling the then-able's then() function (prior to any call\nback to the specified resolve() or reject() methods), the Resolver\nrejects with that error. If a Resolver's resolve() method is called with\nits own Promise, it rejects with a TypeError.</p>\n\n<p>When a Resolver's reject() method is called, it rejects with the\noptionally specified reason.</p>\n\n<p>Each time a Resolver's then() method is called, it captures a pair of\noptional onFulfilled and onRejected callbacks and returns a Promise of\nthe Resolver's future value as transformed by those callbacks.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-completed' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.promise.Resolver'>Deft.promise.Resolver</span><br/><a href='source/Resolver.html#Deft-promise-Resolver-property-completed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.promise.Resolver-property-completed' class='name expandable'>completed</a> : Boolean<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Indicates whether this Resolver has been completed. ...</div><div class='long'><p>Indicates whether this Resolver has been completed.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-completionAction' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.promise.Resolver'>Deft.promise.Resolver</span><br/><a href='source/Resolver.html#Deft-promise-Resolver-property-completionAction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.promise.Resolver-property-completionAction' class='name expandable'>completionAction</a> : String<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>The completion action (i.e. ...</div><div class='long'><p>The completion action (i.e. 'fulfill' or 'reject').</p>\n</div></div></div><div id='property-completionValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.promise.Resolver'>Deft.promise.Resolver</span><br/><a href='source/Resolver.html#Deft-promise-Resolver-property-completionValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.promise.Resolver-property-completionValue' class='name expandable'>completionValue</a> : Mixed<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>The completion value (i.e. ...</div><div class='long'><p>The completion value (i.e. resolution value or rejection error).</p>\n</div></div></div><div id='property-consequences' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.promise.Resolver'>Deft.promise.Resolver</span><br/><a href='source/Resolver.html#Deft-promise-Resolver-property-consequences' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.promise.Resolver-property-consequences' class='name expandable'>consequences</a> : <a href=\"#!/api/Deft.promise.Consequence\" rel=\"Deft.promise.Consequence\" class=\"docClass\">Deft.promise.Consequence</a>[]<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Pending Consequences chained to this Resolver. ...</div><div class='long'><p>Pending Consequences chained to this Resolver.</p>\n<p>Defaults to: <code>[]</code></p></div></div></div><div id='property-promise' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.promise.Resolver'>Deft.promise.Resolver</span><br/><a href='source/Resolver.html#Deft-promise-Resolver-property-promise' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.promise.Resolver-property-promise' class='name expandable'>promise</a> : <a href=\"#!/api/Deft.promise.Promise\" rel=\"Deft.promise.Promise\" class=\"docClass\">Deft.promise.Promise</a><span class=\"signature\"></span></div><div class='description'><div class='short'><p>Promise of the future value of this Deferred.</p>\n</div><div class='long'><p>Promise of the future value of this Deferred.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.promise.Resolver'>Deft.promise.Resolver</span><br/><a href='source/Resolver.html#Deft-promise-Resolver-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Deft.promise.Resolver-method-constructor' class='name expandable'>Deft.promise.Resolver</a>( <span class='pre'></span> ) : <a href=\"#!/api/Deft.promise.Resolver\" rel=\"Deft.promise.Resolver\" class=\"docClass\">Deft.promise.Resolver</a><span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Deft.promise.Resolver\" rel=\"Deft.promise.Resolver\" class=\"docClass\">Deft.promise.Resolver</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-complete' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.promise.Resolver'>Deft.promise.Resolver</span><br/><a href='source/Resolver.html#Deft-promise-Resolver-method-complete' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.promise.Resolver-method-complete' class='name expandable'>complete</a>( <span class='pre'>action, value</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Complete this Resolver with the specified action and value. ...</div><div class='long'><p>Complete this Resolver with the specified action and value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>action</span> : String<div class='sub-desc'><p>Completion action (i.e. 'fufill' or 'reject').</p>\n</div></li><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>Fulfillment value or rejection reason.</p>\n</div></li></ul></div></div></div><div id='method-reject' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.promise.Resolver'>Deft.promise.Resolver</span><br/><a href='source/Resolver.html#Deft-promise-Resolver-method-reject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.promise.Resolver-method-reject' class='name expandable'>reject</a>( <span class='pre'>reason</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Reject this Resolver with the specified reason. ...</div><div class='long'><p>Reject this Resolver with the specified reason.</p>\n\n<p>Once a Resolver has been rejected, it is considered to be complete\nand subsequent calls to resolve() or reject() are ignored.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>reason</span> : Error<div class='sub-desc'><p>Rejection reason.</p>\n</div></li></ul></div></div></div><div id='method-resolve' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.promise.Resolver'>Deft.promise.Resolver</span><br/><a href='source/Resolver.html#Deft-promise-Resolver-method-resolve' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.promise.Resolver-method-resolve' class='name expandable'>resolve</a>( <span class='pre'>value</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Resolve this Resolver with the (optional) specified value. ...</div><div class='long'><p>Resolve this Resolver with the (optional) specified value.</p>\n\n<p>If called with a then-able (i.e.a Function or Object with a then()\nfunction, such as another Promise) it assimilates the then-able's\nresult; the Resolver provides its own resolve() and reject() methods\nas the onFulfilled or onRejected arguments in a call to that\nthen-able's then() function.  If an error is  thrown while calling\nthe then-able's then() function (prior to any call back to the\nspecified resolve() or reject() methods), the Resolver rejects with\nthat error. If a Resolver's resolve() method is called with its own\nPromise, it rejects with a TypeError.</p>\n\n<p>Once a Resolver has been fulfilled or rejected, it is considered to be complete\nand subsequent calls to resolve() or reject() are ignored.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>Value to resolve as either a fulfillment value or rejection reason.</p>\n</div></li></ul></div></div></div><div id='method-then' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.promise.Resolver'>Deft.promise.Resolver</span><br/><a href='source/Resolver.html#Deft-promise-Resolver-method-then' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.promise.Resolver-method-then' class='name expandable'>then</a>( <span class='pre'>[onFulfilled], [onRejected], [onProgress]</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Used to specify onFulfilled and onRejected callbacks that will be\nnotified when the future value becomes available. ...</div><div class='long'><p>Used to specify onFulfilled and onRejected callbacks that will be\nnotified when the future value becomes available.</p>\n\n<p>Those callbacks can subsequently transform the value that was\nfulfilled or the error that was rejected. Each call to then()\nreturns a new Promise of that transformed value; i.e., a Promise\nthat is fulfilled with the callback return value or rejected with\nany error thrown by the callback.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>onFulfilled</span> : Function (optional)<div class='sub-desc'><p>callback to execute to transform a fulfillment value.</p>\n</div></li><li><span class='pre'>onRejected</span> : Function (optional)<div class='sub-desc'><p>callback to execute to transform a rejection reason.</p>\n</div></li><li><span class='pre'>onProgress</span> : Function (optional)<div class='sub-desc'><p>callback to execute to transform a progress value.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Promise that is fulfilled with the callback return value or rejected with any error thrown by the callback.</p>\n</div></li></ul></div></div></div><div id='method-update' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.promise.Resolver'>Deft.promise.Resolver</span><br/><a href='source/Resolver.html#Deft-promise-Resolver-method-update' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.promise.Resolver-method-update' class='name expandable'>update</a>( <span class='pre'>progress</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Updates progress for this Resolver, if it is still pending, triggering it to execute the 'onProgress' callback and pr...</div><div class='long'><p>Updates progress for this Resolver, if it is still pending, triggering it to execute the 'onProgress' callback and propagate the resulting transformed progress value to Resolvers that originate from this Resolver.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>progress</span> : Mixed<div class='sub-desc'><p>The progress value.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{"private":true}});